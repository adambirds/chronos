name: Publish chronos to PyPI

on: 
  push:
    branches:
      - master
  create:
    tags:
      - v*
jobs:
  test:
    strategy:
      matrix:
        python-version:
          - 3.9
          - '3.10'
          - '3.11'
          - '3.12'
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup non-python dependencies
      run: |
        sudo tools/setup/install-shellcheck
        sudo tools/setup/install-shfmt
    - name: Install Python dependencies
      uses: py-actions/py-dependency-install@v2
      with:
        path: requirements/dev.txt
    - name: Install node dependencies
      run: |
        npm install
    - name: Run unittests
      run: |
        PYTHONPATH=src pytest
    - name: Run linters
      run: |
        ./tools/lint

  build-n-publish:
    needs: test
    name: Build and Publish chronos
    runs-on: ubuntu-20.04
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
    - name: Install Python dependencies
      uses: py-actions/py-dependency-install@v2
      with:
        path: requirements/dev.txt

    # Step to ensure clean build artifacts
    - name: Clean up previous build artifacts
      run: |
        rm -rf dist/ build/ *.egg-info

    # Step to build distribution for Test PyPI
    - name: Build for Test PyPI
      run: |
        python -m build --sdist --wheel --outdir dist/

    # Step to publish to Test PyPI
    - name: Publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true

    # Clean up again before building for PyPI
    - name: Clean up before PyPI build
      run: |
        rm -rf dist/ build/ *.egg-info

    # Step to build distribution for PyPI
    - name: Build for PyPI
      if: startsWith(github.ref, 'refs/tags')
      run: |
        python -m build --sdist --wheel --outdir dist/

    # Step to publish to PyPI
    - name: Publish to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
